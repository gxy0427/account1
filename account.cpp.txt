#include "account.h"
using namespace std;
SavingsAccount::SavingsAccount(int date, int id, double rate) :id(id), balance(0), rate(rate), lastDate(date), accumulation(0) {
	cout << lastDate << "      #" << id << " is created" << endl;
}
int SavingsAccount::getId()const {
	return id;
}
double SavingsAccount::getBalance()const {
	return balance;
}
double SavingsAccount::getRate()const {
	return rate;
}
void SavingsAccount::show() {
	cout << "#" << id << "      " << "Balance: " << balance;
}
void SavingsAccount::record(int date, double amount) {
	accumulation = accumulate(date);
	lastDate = date;
	amount = floor(amount * 100 + 0.5)/100;
	balance += amount;
	cout << date << "     " << "#" << id << "       " << amount << "   " << balance << endl;
}
double SavingsAccount::accumulate(int date) {
	return accumulation + balance * (date - lastDate);
}
void SavingsAccount::deposit(int date, double amount) {
	record(date, amount);
}
void SavingsAccount::withdraw(int date, double amount) {
	record(date, -amount);
}
void SavingsAccount::settle(int date) {
	double interest = accumulate(date) * rate / 365;
	if (interest != 0) {
		record(date, interest);
	}
	accumulation = 0;
}